/**
 * @file fbt_syscall_list.h
 * List of all syscalls and possible parameters of a system.
 *
 * Copyright (c) 2011 ETH Zurich
 * @author Mathias Payer <mathias.payer@nebelwelt.net>
 *
 * $Date: 2011-12-30 14:24:05 +0100 (Fri, 30 Dec 2011) $
 * $LastChangedDate: 2011-12-30 14:24:05 +0100 (Fri, 30 Dec 2011) $
 * $LastChangedBy: payerm $
 * $Revision: 1134 $
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA  02110-1301, USA.
 */
#ifndef FBT_SYSCALL_LIST_H
#define FBT_SYSCALL_LIST_H

#if defined(SYSCALL_POLICY_FILE)
enum syscall_argument_type;

struct syscall_entry {
  const char *name;
  const enum syscall_argument_type args[6];
  const enum syscall_argument_type ret;
};

#define IGN SYSCALL_ARG_IGNORE
#define INT SYSCALL_ARG_INT
#define PTR SYSCALL_ARG_POINTER
#define STR SYSCALL_ARG_STRING
#define PTH SYSCALL_ARG_PATH

struct syscall_entry fbt_syscall_list[] = {
  { "restart_syscall", { IGN, IGN, IGN, IGN, IGN, IGN}, IGN },  /* 0x0 */
  { "exit", { INT, IGN, IGN, IGN, IGN, IGN}, IGN },
  { "fork", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "read", { INT, PTR, INT, IGN, IGN, IGN}, INT },
  { "write", { INT, PTR, INT, IGN, IGN, IGN}, INT },
  { "open", { PTH, INT, IGN, IGN, IGN, IGN}, INT },
  { "close", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "waitpid", { INT, PTR, INT, IGN, IGN, IGN}, INT },
  { "creat", { PTH, INT, IGN, IGN, IGN, IGN}, INT },
  { "link", { PTH, PTH, IGN, IGN, IGN, IGN}, INT },
  { "unlink", { PTH, IGN, IGN, IGN, IGN, IGN}, INT },
  { "execve", { STR, PTR, PTR, IGN, IGN, IGN}, INT },
  { "chdir", { PTH, IGN, IGN, IGN, IGN, IGN}, INT },
  { "time", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "mknod", { PTH, INT, INT, IGN, IGN, IGN}, INT },
  { "chmod", { PTH, INT, IGN, IGN, IGN, IGN}, INT },
  { "lchown", { PTH, INT, INT, IGN, IGN, IGN}, INT },  /* 0x10 16 */
  { "undefined", { }, IGN /* undefined */ },
  { "stat", { PTH, PTR, IGN, IGN, IGN, IGN}, INT },
  { "lseek", { INT, INT, INT, IGN, IGN, IGN}, INT },
  { "getpid", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "mount", { PTH, PTH, STR, INT, PTR, IGN}, INT },
  { "umount", { PTH, IGN, IGN, IGN, IGN, IGN}, INT },
  { "setuid", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "getuid", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "stime", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "ptrace", { INT, INT, PTR, PTR, IGN, IGN}, INT },
  { "alarm", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "fstat", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "pause", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "utime", { STR, PTR, IGN, IGN, IGN, IGN}, INT },
  { "undefined", { }, IGN /* undefined */ },
  { "undefined", { }, IGN /* undefined */ },  /* 0x20 32 */
  { "access", { PTH, INT, IGN, IGN, IGN, IGN}, INT },
  { "nice", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "ftime", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "sync", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "kill", { INT, INT, IGN, IGN, IGN, IGN}, INT },
  { "rename", { PTH, PTH, IGN, IGN, IGN, IGN}, INT },
  { "mkdir", { PTH, INT, IGN, IGN, IGN, IGN}, INT },
  { "rmdir", { PTH, IGN, IGN, IGN, IGN, IGN}, INT },
  { "dup", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "pipe", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "times", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "brk", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "setgid", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "getgid", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "signal", { INT, PTR, IGN, IGN, IGN, IGN}, INT },  /* 0x30 48 */
  { "geteuid", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "getegid", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "acct", { PTH, IGN, IGN, IGN, IGN, IGN}, INT },
  { "umount2", { PTH, INT, IGN, IGN, IGN, IGN}, INT },
  { "ioctl", { INT, INT, IGN, IGN, IGN, IGN}, INT },
  { "fcntl", { INT, INT, IGN, IGN, IGN, IGN}, INT },
  { "setpgid", { INT, INT, IGN, IGN, IGN, IGN}, INT },
  { "ulimit", { INT, PTR, IGN, IGN, IGN, IGN}, PTR },
  { "oldolduname", { STR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "umask", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "chroot", { PTH, IGN, IGN, IGN, IGN, IGN}, INT },
  { "ustat", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "dup2", { INT, INT, IGN, IGN, IGN, IGN}, INT },
  { "getppid", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },  /* 0x40 64 */
  { "getpgrp", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "setsid", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "sigaction", { INT, PTR, PTR, IGN, IGN, IGN}, INT },
  { "sgetmask", { IGN, IGN, IGN, IGN, IGN, IGN}, PTR },
  { "ssetmask", { PTR, IGN, IGN, IGN, IGN, IGN}, PTR },
  { "setreuid", { INT, INT, IGN, IGN, IGN, IGN}, INT },
  { "setregid", { INT, INT, IGN, IGN, IGN, IGN}, INT },
  { "sigsuspend", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "sigpending", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "sethostname", { STR, INT, IGN, IGN, IGN, IGN}, INT },
  { "setrlimit", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "getrlimit", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "getrusage", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "gettimeofday", { PTR, PTR, IGN, IGN, IGN, IGN}, INT },
  { "settimeofday", { PTR, PTR, IGN, IGN, IGN, IGN}, INT },
  { "getgroups", { INT, PTR, IGN, IGN, IGN, IGN}, INT },  /* 0x50 80 */
  { "setgroups", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "select", { INT, PTR, PTR, PTR, PTR, IGN}, INT },
  { "symlink", { PTH, PTH, IGN, IGN, IGN, IGN}, INT },
  { "oldlstat", { PTH, PTR, IGN, IGN, IGN, IGN}, INT },
  { "readlink", { PTH, STR, INT, IGN, IGN, IGN}, INT },
  { "uselib", { PTH, IGN, IGN, IGN, IGN, IGN}, INT },
  { "swapon", { PTH, INT, IGN, IGN, IGN, IGN}, INT },
  { "reboot", { INT, INT, INT, PTR, IGN, IGN}, INT },
  { "readdir", { INT, PTR, INT, IGN, IGN, IGN}, INT },
  { "mmap", { PTR, INT, INT, INT, INT, INT}, INT },
  { "munmap", { PTR, INT, IGN, IGN, IGN, IGN}, INT },
  { "truncate", { PTH, INT, IGN, IGN, IGN, IGN}, INT },
  { "ftruncate", { INT, INT, IGN, IGN, IGN, IGN}, INT },
  { "fchmod", { INT, INT, IGN, IGN, IGN, IGN}, INT },
  { "fchown", { INT, INT, INT, IGN, IGN, IGN}, INT },
  { "getpriority", { INT, INT, IGN, IGN, IGN, IGN}, INT },  /* 0x60 96 */
  { "setpriority", { INT, INT, INT, IGN, IGN, IGN}, INT },
  { "profil", { PTR, INT, INT, INT, IGN, IGN}, INT },
  { "statfs", { PTH, PTR, IGN, IGN, IGN, IGN}, INT },
  { "fstatfs", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "ioperm", { INT, INT, INT, IGN, IGN, IGN}, INT },
  { "socketcall", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "syslog", { INT, STR, IGN, IGN, IGN, IGN}, INT },
  { "setitimer", { INT, PTR, PTR, IGN, IGN, IGN}, INT },
  { "getitimer", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "stat", { PTH, PTR, IGN, IGN, IGN, IGN}, INT },
  { "lstat", { PTH, PTR, IGN, IGN, IGN, IGN}, INT },
  { "fstat", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "olduname", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "iopl", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "vhangup", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "idle", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },  /* 0x70 112 */
  { "vm86old", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "wait4", { INT, PTR, INT, PTR, IGN, IGN}, INT },
  { "swapoff", { PTH, IGN, IGN, IGN, IGN, IGN}, INT },
  { "sysinfo", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "ipc", { INT, INT, INT, INT, PTR, IGN}, INT },
  { "fsync", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "sigreturn", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "clone", { PTR, PTR, INT, PTR, IGN, IGN}, INT },
  { "setdomainname", { STR, INT, IGN, IGN, IGN, IGN}, INT },
  { "uname", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "modify_ldt", { INT, PTR, INT, IGN, IGN, IGN}, INT },
  { "adjtimex", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "mprotect", { PTR, INT, INT, IGN, IGN, IGN}, INT },
  { "sigprocmask", { INT, PTR, PTR, IGN, IGN, IGN}, INT },
  { "create_module", { STR, INT, IGN, IGN, IGN, IGN}, INT },
  { "init_module", { STR, PTR, IGN, IGN, IGN, IGN}, INT },  /* 0x80 128 */
  { "delete_module", { STR, INT, PTR, PTR, IGN, IGN}, INT },
  { "get_kernel_syms", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "quotactl", { INT, STR, INT, PTR, IGN, IGN}, INT },
  { "getpgid", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "fchdir", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "bdflush", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "sysfs", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "personality", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "afs_syscall", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "setfsuid", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "setfsgid", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "llseek", { INT, INT, INT, PTR, INT, IGN}, INT },
  { "getdents", { INT, PTR, INT, IGN, IGN, IGN}, INT },
  { "newselect", { INT, PTR, PTR, PTR, PTR, IGN}, INT },
  { "flock", { INT, INT, IGN, IGN, IGN, IGN}, INT },
  { "mysnc", { PTR, INT, INT, IGN, IGN, IGN}, INT },  /* 0x90 144 */
  { "readv", { INT, PTR, INT, IGN, IGN, IGN}, INT },
  { "writev", { INT, PTR, INT, IGN, IGN, IGN}, INT },
  { "getsid", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "fdatasync", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "sysctl", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "mlock", { PTR, INT, IGN, IGN, IGN, IGN}, INT },
  { "munlock", { PTR, INT, IGN, IGN, IGN, IGN}, INT },
  { "mlockall", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "munlockall", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "sched_setparam", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "sched_getparam", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "sched_setscheduler", { INT, INT, PTR, IGN, IGN, IGN}, INT },
  { "sched_getscheduler", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "sched_yield", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "sched_get_priority_max", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "sched_get_priority_min", { INT, IGN, IGN, IGN, IGN, IGN}, INT },  /* 0xA0
                                                                          160 */
  { "sched_rr_get_interval", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "nanosleep", { PTR, PTR, IGN, IGN, IGN, IGN}, INT },
  { "mremap", { PTR, INT, INT, INT, INT, IGN}, PTR },
  { "setresuid", { INT, INT, INT, IGN, IGN, IGN}, INT },
  { "getresuid", { PTR, PTR, PTR, IGN, IGN, IGN}, INT },
  { "vm86", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "query_module", { STR, INT, PTR, IGN, IGN, IGN}, INT },
  { "poll", { PTR, INT, INT, IGN, IGN, IGN}, INT },
  { "nfsservctl", { INT, PTR, PTR, IGN, IGN, IGN}, INT },
  { "setresgid", { INT, INT, INT, IGN, IGN, IGN}, INT },
  { "getresgid", { PTR, PTR, PTR, IGN, IGN, IGN}, INT },
  { "prctl", { INT, INT, INT, INT, INT, IGN}, INT },
  { "rt_sigreturn", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "rt_sigaction", { INT, PTR, PTR, IGN, IGN, IGN}, INT },
  { "rt_sigprocmask", { INT, PTR, PTR, IGN, IGN, IGN}, INT },
  { "rt_sigpending", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },  /* 0xB0 176 */
  { "rt_sigtimedwait", { PTR, PTR, PTR, IGN, IGN, IGN}, INT },
  { "rt_sigqueueinfo", { INT, INT, INT, IGN, IGN, IGN}, INT },
  { "rt_sigsuspend", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "pread64", { INT, PTR, INT, INT, IGN, IGN}, INT },
  { "pwrite64", { INT, PTR, INT, INT, IGN, IGN}, INT },
  { "chown", { PTH, INT, INT, IGN, IGN, IGN}, INT },
  { "getcwd", { PTH, INT, IGN, IGN, IGN, IGN}, INT },
  { "capget", { PTR, PTR, IGN, IGN, IGN, IGN}, INT },
  { "capset", { PTR, PTR, IGN, IGN, IGN, IGN}, INT },
  { "signalstack", { PTR, PTR, IGN, IGN, IGN, IGN}, INT },
  { "sendfile", { INT, INT, PTR, INT, IGN, IGN}, INT },
  { "getpmsg", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "putpmsg", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "vfork", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "ugetrlimit", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "mmap2", { PTR, INT, INT, INT, INT, INT}, INT },  /* 0xC0 192 */
  { "truncate64", { PTH, INT, IGN, IGN, IGN, IGN}, INT },
  { "ftruncate64", { INT, INT, IGN, IGN, IGN, IGN}, INT },
  { "stat64", { PTH, PTR, IGN, IGN, IGN, IGN}, INT },
  { "lstat64", { PTH, PTR, IGN, IGN, IGN, IGN}, INT },
  { "fstat64", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "lchown32", { PTH, INT, INT, IGN, IGN, IGN}, INT },
  { "getuid32", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "getgid32", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "geteuid32", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "getegid32", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "setreuid32", { INT, INT, IGN, IGN, IGN, IGN}, INT },
  { "setregid32", { INT, INT, IGN, IGN, IGN, IGN}, INT },
  { "getgroups32", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "setgroups32", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "fchown32", { INT, INT, INT, IGN, IGN, IGN}, INT },
  { "setresuid32", { INT, INT, INT, IGN, IGN, IGN}, INT },  /* 0xD0 208 */
  { "getresuid32", { PTR, PTR, PTR, IGN, IGN, IGN}, INT },
  { "setresgid32", { INT, INT, INT, IGN, IGN, IGN}, INT },
  { "getresgid32", { PTR, PTR, PTR, IGN, IGN, IGN}, INT },
  { "chown32", { PTH, INT, INT, IGN, IGN, IGN}, INT },
  { "setuid32", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "setgid32", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "setfsui32", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "setfsgid32", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "pivot_root", { PTH, STR, IGN, IGN, IGN, IGN}, INT },
  { "mincore", { PTR, INT, PTR, IGN, IGN, IGN}, INT },
  { "madvise", { PTR, INT, INT, IGN, IGN, IGN}, INT },
  { "getdents64", { INT, PTR, INT, IGN, IGN, IGN}, INT },
  { "fcntl64", { INT, INT, IGN, IGN, IGN, IGN}, INT },
  { "undefined", { }, IGN /* undefined */ },
  { "undefined", { }, IGN /* undefined */ },
  { "gettid", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },  /* 0xE0 224 */
  { "readahead", { INT, INT, INT, IGN, IGN, IGN}, INT },
  { "setxattr", { PTH, STR, PTR, INT, INT, IGN}, INT },
  { "lsetxattr", { PTH, STR, PTR, INT, INT, IGN}, INT },
  { "fsetxattr", { INT, STR, PTR, INT, INT, IGN}, INT },
  { "getxattr", { PTH, STR, PTR, INT, IGN, IGN}, INT },
  { "lgetxattr", { PTH, STR, PTR, INT, IGN, IGN}, INT },
  { "fgetxattr", { INT, STR, PTR, INT, IGN, IGN}, INT },
  { "listxattr", { PTH, STR, INT, IGN, IGN, IGN}, INT },
  { "llistxattr", { PTH, STR, INT, IGN, IGN, IGN}, INT },
  { "flistxattr", { INT, STR, INT, IGN, IGN, IGN}, INT },
  { "removexattr", { PTH, STR, IGN, IGN, IGN, IGN}, INT },
  { "lremovexattr", { PTH, STR, IGN, IGN, IGN, IGN}, INT },
  { "fremovexattr", { INT, STR, IGN, IGN, IGN, IGN}, INT },
  { "tkill", { INT, INT, IGN, IGN, IGN, IGN}, INT },
  { "sendfile64", { INT, INT, PTR, INT, IGN, IGN}, INT },
  { "futex", { PTR, INT, INT, PTR, PTR, INT}, INT },  /* 0xF0 240 */
  { "sched_setaffinity", { INT, INT, PTR, IGN, IGN, IGN}, INT },
  { "sched_getaffinity", { INT, INT, PTR, IGN, IGN, IGN}, INT },
  { "set_thread_area", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "get_thread_area", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "io_setup", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "io_destroy", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "io_getevents", { PTR, INT, INT, PTR, PTR, IGN}, INT },
  { "io_submit", { PTR, INT, PTR, IGN, IGN, IGN}, INT },
  { "io_cancel", { PTR, PTR, PTR, IGN, IGN, IGN}, INT },
  { "fadvise64", { INT, INT, INT, INT, IGN, IGN}, INT },
  { "undefined", { }, IGN /* undefined */ },
  { "exit_group", { INT, IGN, IGN, IGN, IGN, IGN}, IGN },
  { "lookup_dcookie", { INT, STR, INT, IGN, IGN, IGN}, INT },  /* oprofile call */
  { "epoll_create", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "epoll_ctl", { INT, INT, INT, PTR, IGN, IGN}, INT },
  { "epoll_wait", { INT, PTR, INT, INT, IGN, IGN}, INT },  /* 0x100 256 */
  { "remap_file_pages", { PTR, INT, INT, INT, INT, IGN}, INT },
  { "set_tid_address", { PTR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "timer_create", { INT, PTR, PTR, IGN, IGN, IGN}, INT },
  { "timer_settime", { INT, INT, PTR, PTR, IGN, IGN}, INT },
  { "timer_gettime", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "timer_getoverrun", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "timer_delete", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "clock_settime", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "clock_gettime", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "clock_getres", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "clock_nanosleep", { INT, INT, PTR, PTR, IGN, IGN}, INT },
  { "statfs64", { PTH, PTR, IGN, IGN, IGN, IGN}, INT },
  { "fstatfs64", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "tgkill", { INT, INT, INT, IGN, IGN, IGN}, INT },
  { "utimes", { PTH, PTR, IGN, IGN, IGN, IGN}, INT },
  { "fadvise64_64", { INT, INT, INT, INT, IGN, IGN}, INT },  /* 0x110 272 */
  { "undefined", { }, IGN /* undefined */ },
  { "mbind", { PTR, INT, INT, PTR, INT, INT}, INT },
  { "get_mempolicy", { PTR, PTR, INT, INT, INT, IGN}, INT },
  { "set_mempolicy", { INT, PTR, PTR, IGN, IGN, IGN}, INT },
  { "mq_open", { STR, INT, IGN, IGN, IGN, IGN}, INT },
  { "mq_unlink", { STR, IGN, IGN, IGN, IGN, IGN}, INT },
  { "mq_timedsend", { INT, PTR, INT, INT, PTR, IGN}, INT },
  { "mq_timedreceive", { INT, PTR, INT, PTR, PTR, IGN}, INT },
  { "mq_notify", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "mq_getsetattr", { INT, PTR, INT, IGN, IGN, IGN}, INT },
  { "kexec_load", { INT, INT, PTR, INT, IGN, IGN}, INT },
  { "waitid", { INT, INT, PTR, INT, IGN, IGN}, INT },
  { "sys_setaltroot", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "add_key", { PTR, PTR, PTR, INT, INT, IGN}, INT },
  { "request_key", { PTR, PTR, PTR, INT, IGN, IGN}, INT },
  { "keyctl", { INT, IGN, IGN, IGN, IGN, IGN}, INT },  /* 0x120 288 */
  { "ioprio_set", { INT, INT, INT, IGN, IGN, IGN}, INT },
  { "ioprio_get", { INT, INT, IGN, IGN, IGN, IGN}, INT },
  { "inotify_init", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "inotify_add_watch", { INT, STR, INT, IGN, IGN, IGN}, INT },
  { "inotify_rm_watch", { INT, INT, IGN, IGN, IGN, IGN}, INT },
  { "migrate_pages", { IGN, IGN, IGN, IGN, IGN, IGN}, INT },
  { "openat", { INT, PTH, INT, IGN, IGN, IGN}, INT },
  { "mkdirat", { INT, PTH, INT, IGN, IGN, IGN}, INT },
  { "mknodat", { INT, PTH, INT, INT, IGN, IGN}, INT },
  { "fchownat", { INT, PTH, INT, INT, INT, IGN}, INT },
  { "futimesat", { INT, PTH, PTR, IGN, IGN, IGN}, INT },
  { "fstatat64", { INT, PTH, PTR, INT, IGN, IGN}, INT },
  { "unlinkat", { INT, PTH, PTR, IGN, IGN, IGN}, INT },
  { "renameat", { INT, PTH, INT, PTH, IGN, IGN}, INT },
  { "linkat", { INT, PTH, INT, PTH, INT, IGN}, INT },
  { "symlinkat", { PTH, INT, PTH, IGN, IGN, IGN}, INT },  /* 0x130 304 */
  { "readlinkat", { INT, PTH, STR, INT, IGN, IGN}, INT },
  { "fchmodat", { INT, PTH, INT, INT, IGN, IGN}, INT },
  { "faccessat", { INT, PTH, INT, INT, IGN, IGN}, INT },
  { "pselect6", { INT, PTR, PTR, PTR, PTR, PTR}, INT },
  { "ppoll", { PTR, INT, INT, IGN, IGN, IGN}, INT },
  { "unshare", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "set_robust_list", { PTR, INT, IGN, IGN, IGN, IGN}, INT },
  { "get_robust_list", { INT, PTR, PTR, IGN, IGN, IGN}, INT },
  { "splice", { INT, PTR, INT, PTR, INT, INT}, IGN },
  { "sync_file_range", { INT, INT, INT, INT, IGN, IGN}, INT },
  { "tee", { INT, INT, INT, INT, IGN, IGN}, IGN },
  { "vmsplice", { INT, PTR, INT, INT, IGN, IGN}, INT },
  { "move_pages", { INT, INT, PTR, PTR, PTR, INT}, INT },
  { "getcpu", { PTR, PTR, PTR, IGN, IGN, IGN}, INT },
  { "epoll_pwait", { INT, PTR, INT, INT, PTR, IGN}, INT },
  { "utimensat", { INT, STR, PTR, INT, IGN, IGN}, INT },  /* 0x140 320 */
  { "signalfd", { INT, PTR, INT, IGN, IGN, IGN}, INT },
  { "timerfd_create", { INT, INT, IGN, IGN, IGN, IGN}, INT },
  { "eventfd", { INT, INT, IGN, IGN, IGN, IGN}, INT },
  { "fallocate", { INT, INT, INT, INT, IGN, IGN}, INT },
  { "timerfd_settime", { INT, INT, PTR, PTR, IGN, IGN}, INT },
  { "timerfd_gettime", { INT, PTR, IGN, IGN, IGN, IGN}, INT },
  { "signalfd4", { INT, PTR, INT, IGN, IGN, IGN}, INT },
  { "eventfd2", { INT, INT, IGN, IGN, IGN, IGN}, INT },
  { "epoll_create1", { INT, IGN, IGN, IGN, IGN, IGN}, INT },
  { "dup3", { INT, INT, INT, IGN, IGN, IGN}, INT },
  { "pipe2", { PTR, INT, IGN, IGN, IGN, IGN}, INT },
  { "inotify_init1", { INT, IGN, IGN, IGN, IGN, IGN}, INT },  /* 0x14c 332 */
};

#endif  /* SYSCALL_POLICY_FILE */
#endif  /* FBT_SYSCALL_LIST_H */
